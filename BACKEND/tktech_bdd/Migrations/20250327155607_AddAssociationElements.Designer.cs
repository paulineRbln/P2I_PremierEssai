// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace tktech_bdd.Migrations
{
    [DbContext(typeof(ProjetContext))]
    [Migration("20250327155607_AddAssociationElements")]
    partial class AddAssociationElements
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("tktech_bdd.Model.Association", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("ElementId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonneId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ElementId");

                    b.HasIndex("PersonneId");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("tktech_bdd.Model.AssociationElements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Element1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Element2Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ElementId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ElementId2")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Element1Id");

                    b.HasIndex("Element2Id");

                    b.ToTable("AssociationsElements");
                });

            modelBuilder.Entity("tktech_bdd.Model.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstFait")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("tktech_bdd.Model.Personne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstProprio")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoProfil")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("tktech_bdd.Model.Recurrence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("ElementId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ElementId");

                    b.ToTable("Recurrences");
                });

            modelBuilder.Entity("tktech_bdd.Model.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbElementsAchetes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbEvenementsCree")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbEvenementsParticipe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbProblemesAnnonces")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbReservations")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbTaches")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonneId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("tktech_bdd.Model.Association", b =>
                {
                    b.HasOne("tktech_bdd.Model.Element", "Element")
                        .WithMany("ListeAssociations")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tktech_bdd.Model.Personne", "Personne")
                        .WithMany()
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");

                    b.Navigation("Personne");
                });

            modelBuilder.Entity("tktech_bdd.Model.AssociationElements", b =>
                {
                    b.HasOne("tktech_bdd.Model.Element", "Element1")
                        .WithMany()
                        .HasForeignKey("Element1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tktech_bdd.Model.Element", "Element2")
                        .WithMany()
                        .HasForeignKey("Element2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element1");

                    b.Navigation("Element2");
                });

            modelBuilder.Entity("tktech_bdd.Model.Recurrence", b =>
                {
                    b.HasOne("tktech_bdd.Model.Element", "Element")
                        .WithMany("JoursRecurrence")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");
                });

            modelBuilder.Entity("tktech_bdd.Model.Element", b =>
                {
                    b.Navigation("JoursRecurrence");

                    b.Navigation("ListeAssociations");
                });
#pragma warning restore 612, 618
        }
    }
}
